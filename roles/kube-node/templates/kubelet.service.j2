[Unit]
Description=Kubernetes Kubelet
Documentation=https://github.com/GoogleCloudPlatform/kubernetes

[Service]
WorkingDirectory={{ data_dir }}/kubelet
{% if KUBE_RESERVED_ENABLED == "yes" %}
ExecStartPre=/bin/mkdir -p /sys/fs/cgroup/cpuset/system.slice/kubelet.service
ExecStartPre=/bin/mkdir -p /sys/fs/cgroup/hugetlb/system.slice/kubelet.service
ExecStartPre=/bin/mkdir -p /sys/fs/cgroup/memory/system.slice/kubelet.service
ExecStartPre=/bin/mkdir -p /sys/fs/cgroup/pids/system.slice/kubelet.service
{% endif %}
{% if KUBE_BIND_CPU_ENABLED == "yes" %}
ExecStartPre=/bin/rm -rf {{ KUBELET_ROOT_DIR }}/cpu_manager_state
{% endif %}
#--non-masquerade-cidr=0.0.0.0/0 
ExecStart={{ bin_dir }}/kubelet \
  --node-status-update-frequency=30s \
  --address={{ inventory_hostname }} \
  --anonymous-auth=false \
  --authentication-token-webhook \
  --authorization-mode=Webhook \
  --client-ca-file={{ ca_dir }}/ca.pem \
  --cluster-dns={{ CLUSTER_DNS_SVC_IP }} \
  --cluster-domain={{ CLUSTER_DNS_DOMAIN }} \
{% if KUBE_BIND_CPU_ENABLED == "yes" %}
  --cpu-manager-policy=static \
{% endif %}
{% if K8S_VER is regex('v1.1(0|1|2|3|4)') %}
  --allow-privileged=true \
{% endif %}
{% if K8S_VER is regex('v1.1(0|1)') %}
{% if KUBE_BIND_CPU_ENABLED == "yes" %}
  --feature-gates=CPUManager=true,VolumeSnapshotDataSource=true,CSINodeInfo=true,CSIDriverRegistry=true,KubeletPluginsWatcher=true,VolumeScheduling=true \
{% else %}
  --feature-gates=VolumeSnapshotDataSource=true,CSINodeInfo=true,CSIDriverRegistry=true,KubeletPluginsWatcher=true,VolumeScheduling=true \
{% endif %}
{% elif K8S_VER is regex('v1.1(2|3)') %}
  --feature-gates=VolumeSnapshotDataSource=true,CSINodeInfo=true,CSIDriverRegistry=true,KubeletPluginsWatcher=true,VolumeScheduling=true \
{% elif K8S_VER is regex('v1.1(4|5|6)') %}
  --feature-gates=VolumeSnapshotDataSource=true,CSINodeInfo=true,CSIDriverRegistry=true,ExpandCSIVolumes=true,ExpandInUsePersistentVolumes=true  \
{% else %}
  --feature-gates=VolumeSnapshotDataSource=true \
{% endif %}
{% if CLUSTER_NETWORK=="tencen-ccm" %}
  --network-plugin=kubenet \
  --cloud-provider=external \
  --non-masquerade-cidr=0.0.0.0/0 \
{% else %}
  --network-plugin=cni \
{% endif %}
  --hairpin-mode hairpin-veth \
  --cni-bin-dir={{ bin_dir }} \
  --cni-conf-dir=/etc/cni/net.d \
{% if CONTAINER_RUNTIME == "containerd" %}
  --container-runtime=remote \
  --container-runtime-endpoint=unix:///run/containerd/containerd.sock \
{% endif %}
  --fail-swap-on=false \
  --hostname-override={{ inventory_hostname }} \
  --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \
  --max-pods={{ MAX_PODS }} \
  --pod-infra-container-image={{ gcr_mirror }}google-containers/pause-amd64:3.1 \
  --register-node=true \
  --root-dir={{ KUBELET_ROOT_DIR }} \
  --tls-cert-file={{ ca_dir }}/kubelet.pem \
  --tls-private-key-file={{ ca_dir }}/kubelet-key.pem \
  --cgroups-per-qos=true \
  --cgroup-driver=cgroupfs \
{% if KUBE_RESERVED_ENABLED == "yes" %}
{% if DEPLOY_MODE == "allinone" and "kube-master" in group_names %}
  --enforce-node-allocatable=pods \
  --kube-reserved={{ KUBE_RESERVED_MASTER }} \
  --kube-reserved-cgroup=/system.slice/kubelet.service \
  --system-reserved={{ SYS_RESERVED_MASTER }} \
  --system-reserved-cgroup=/system.slice \
{% else %}
  --enforce-node-allocatable=pods \
  --kube-reserved={{ KUBE_RESERVED }} \
  --kube-reserved-cgroup=/system.slice/kubelet.service \
  --system-reserved={{ SYS_RESERVED }} \
  --system-reserved-cgroup=/system.slice \
{% endif %}
{% endif %}
  --eviction-hard={{ HARD_EVICTION }} \
  --log-dir={{ log_dir }}/ \
  --logtostderr=false \
  --v=2
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
