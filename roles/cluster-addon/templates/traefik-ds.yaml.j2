---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: traefik-ingress-lb
  name: traefik-ingress-controller
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
      name: traefik-ingress-lb
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      containers:
      - args:
        - --api=false
        - --metrics=true
        - --metrics.prometheus
        - --api.dashboard=true
        - --kubernetes
        - --retry.attempts=3
        - --idletimeout=300s
        - --forwardingtimeouts.responseheadertimeout=300s
        - --insecureskipverify=true
        - --traefiklog=true
        - --traefiklog.format=json
        - --loglevel=INFO
        - --accesslog=true
        - --accesslog.format=json
        - --accessLog.fields.defaultMode=keep
        - --accessLog.fields.names="ClientUsername=drop DownstreamStatusLine=drop
          OriginStatusLine=drop RequestLine=drop RequestAddr=drop"
        - --accessLog.fields.headers.defaultMode=drop
        - --accessLog.fields.headers.names="X-Forwarded-For=keep X-Forwarded-Host=keep
          X-Forwarded-Port=keep X-Forwarded-Proto=keep X-Forwarded-For-Pound=keep
          X-Real-Ip=keep User-Agent=keep Globalticket=keep weimob-pid=keep"
        image: traefik:v1.7.24-alpine
        imagePullPolicy: IfNotPresent
        name: traefik-ingress-lb
        ports:
        - containerPort: 80
          hostPort: 80
          name: http
          protocol: TCP
        - containerPort: 8080
          name: admin
          protocol: TCP
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        edug: traefik
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: traefik-ingress-controller
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
  updateStrategy:
    type: OnDelete
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: kube-system
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 8080
      name: admin
