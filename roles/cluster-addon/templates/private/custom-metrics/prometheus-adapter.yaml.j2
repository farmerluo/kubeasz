---
apiVersion: v1
kind: Namespace
metadata:
  name: custom-metrics

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: adapter-config
  namespace: custom-metrics
data:
  config.yaml: |
    rules:
    - seriesQuery: '{__name__=~"^weimob_.*_count",namespace!="",pod_name!=""}'
      seriesFilters: []
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^weimob_.*_ratio",namespace!="",pod_name!=""}'
      seriesFilters: []
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^weimob_.*_total",namespace!="",pod_name!=""}'
      seriesFilters: []
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      name:
        matches: ^weimob_(.*)_total$
        as: "weimob_${1}_per_second"
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)
    resourceRules:
      cpu:
        containerQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)
        nodeQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>, id='/'}[1m])) by (<<.GroupBy>>)
        resources:
          overrides:
            instance:
              resource: node
            namespace:
              resource: namespace
            pod_name:
              resource: pod
        containerLabel: container_name
      memory:
        containerQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>}) by (<<.GroupBy>>)
        nodeQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>,id='/'}) by (<<.GroupBy>>)
        resources:
          overrides:
            instance:
              resource: node
            namespace:
              resource: namespace
            pod_name:
              resource: pod
        containerLabel: container_name
      window: 1m

---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: custom-metrics-apiserver
  namespace: custom-metrics

---
apiVersion: v1
kind: Secret
metadata:
 name: cm-adapter-serving-certs
 namespace: custom-metrics
data:
 serving.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURlVENDQW1HZ0F3SUJBZ0lVT0ZvRUdKamNYRk5kT2cwQWRNYW1NS1BLc09Nd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0RURUxNQWtHQTFVRUF3d0NZMkV3SGhjTk1Ua3dOVEl3TURNeE1qQXdXaGNOTWprd05URTNNRE14TWpBdwpXakFqTVNFd0h3WURWUVFERXhoamRYTjBiMjB0YldWMGNtbGpjeTFoY0dselpYSjJaWEl3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURzR1JWemJsTXdzYWJ5cFU1dG9rUlVrck9xd2N6bnVXemIKZmEwMWVNeGQvZjNNMENUaUVkb1MvUU1PV0lkUWhWM0dSa0FBVGtuNHljRGdWdE9tamtTQWlYbkRQT1BYRFZiZgpwU3gzNS9HY1VRM052WkU2T2VoQjJiQnZZUTMyNStqd2pXck1zS0NHa1ZSd09lVVdDM09kSXNpWnZBM0IvQk8wCkg2aXFJVHJPNDR4bTNzR3ZhNnJ3TmpQczducHQ3Y0hHM2pHdW1lWis5VWV6RGMrRGhjZmxlTGVpWUw0ayt4OXoKNklma2pZdnMxUXZpNXAzYVpQNjIwalowenZkL2x6RXdpMlJCR0JxNWRka3JIZVFuU2JpNjhkcEpSQ1RRVkpmWgpWakZ4VGhFbVkvU3BJSW1Ea3FQREVEZHBtc1VpV043UFY1elJQcFp0MUtkcDJwUzAwV29CQWdNQkFBR2pnYm93CmdiY3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkJ1aDZxbSsKT2NGNTBVY2NBdlMvN2p2cmEvTnRNQjhHQTFVZEl3UVlNQmFBRkxLWUI5UEZOOXZ2djhhUGRSZVorRTl1a1d0aQpNRmNHQTFVZEVRUlFNRTZDSTJOMWMzUnZiUzF0WlhSeWFXTnpMV0Z3YVhObGNuWmxjaTV0YjI1cGRHOXlhVzVuCmdpZGpkWE4wYjIwdGJXVjBjbWxqY3kxaGNHbHpaWEoyWlhJdWJXOXVhWFJ2Y21sdVp5NXpkbU13RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFDZm9IZXhLZlEvcysyaXcwRGZKbDlBeWxyNGE5U2kwRmt4R0N2MlpOdkM4NGNDUgoyVTBvN1gxaHZMMWtLd0R2K2dkUzhhSzhqSklMSGtOOEFRV0lUZWFMSEFJSlIwZi9Ra1psaGVmaThJWGlkNGJxCkl3cDFkV0JyNWxldWpqV1VRUFNxd01MUStkenVzQVhsRVFZaHlUYk5WSmlINjJYQ2pOcUd2OGtGRGJxSTYvVW0KS2lFMGlkQ091andtL0RnUWo3QW03eDlKYzREUFAzZktEY1RTa1llbC9OSzlPMTVZVTZ6U1ZaTE9LRC9rNkhJOQpPeW5MYUhOaXpaWVFxN0t5RzFibExlTDJobklIakZXK09XK0kxOW5BWHhZb3o1TG1pamNrMkhqaXBCeGYzVkZNCmZPV3hFZG53SFpoNmFpVEprWVgweFJnN0xoWjN3QTNyMUlZU1pEaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
 serving.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBN0JrVmMyNVRNTEdtOHFWT2JhSkVWSkt6cXNITTU3bHMyMzJ0TlhqTVhmMzl6TkFrCjRoSGFFdjBERGxpSFVJVmR4a1pBQUU1SitNbkE0RmJUcG81RWdJbDV3enpqMXcxVzM2VXNkK2Z4bkZFTnpiMlIKT2pub1FkbXdiMkVOOXVmbzhJMXF6TENnaHBGVWNEbmxGZ3R6blNMSW1id053ZndUdEIrb3FpRTZ6dU9NWnQ3QgpyMnVxOERZejdPNTZiZTNCeHQ0eHJwbm1mdlZIc3czUGc0WEg1WGkzb21DK0pQc2ZjK2lINUkyTDdOVUw0dWFkCjJtVCt0dEkyZE03M2Y1Y3hNSXRrUVJnYXVYWFpLeDNrSjBtNHV2SGFTVVFrMEZTWDJWWXhjVTRSSm1QMHFTQ0oKZzVLand4QTNhWnJGSWxqZXoxZWMwVDZXYmRTbmFkcVV0TkZxQVFJREFRQUJBb0lCQUVuOEhrMjYzOVRkaHR4NAowdGZtUnBWZUYzRkdJK2psb1dneXZPbUp2amtpRTd0djZtN3hleTRDSFVnTWsvSzJxRWt1MEhXSUV3UWtiUTJnCkI5a2tzZkM1bys5N2tFWmV4cjkwcWplMDluQ3VzYTJzWHVzcEpGQW1ZSFMyckVLWUw5WFo2d0xUd3FvSXRyWW8KWGxLSEtpYXV0TUFBUHl0dnk5amhKdUNSWXpWYlhSYi80d2Fwd3N6SStwLzFyaGMvYUpGYlpNQlBIN2Z6ZkxYRgpLdEhjS1pEazZEdmUwSkZVWGo1eTk4QzArTjdHejYySWJKKzBvSVJZYkMyaTluajZwaUNtSFVNMUo1Qk9VV21qCmppMWhvU0FtQkFPNW4wVTNyblBqdXJZR1NidHlYV2YzRTNkVHlXQnE1ZnpxVExEZjVIeEg2RjNKM1cxbkw4WTQKcDlGaTd6RUNnWUVBK04ydGE0OGdINk95N2pRak1nWkJqTldWRVlwcTREWk1NTEY3emUzTExVVkZNb3FBclJ5aAo5dVdSczVBMEk0aUYrNnZodUJwV3J0ZTM1ZXlzVEdtaG14M2E1b296ZWFwYjhIUHZuNXowTWVEK1RkTytwTnpOCmg0dEVFd0NnMU5BUnVrM0E5QzQzUm5jS2JrdGF0eFhzOHV5VmlrUDljNDlLMU1rWkhOQkExaFVDZ1lFQTh0MjEKTWJJWGk2cUJBdEpCdzlNcTBiaTdKUFRuZ3IrOU1DdWVDbEtkcmQ4YmxieTZkQWZBTUlMYklqZCsyS3VEdjU5WApDcmgvc1pNdFo2ZDRzS1ZpTlNPYUVTek1Gbm4zdnNJRGM2S1UzbjlxQVNNM3RESUVTMVZpdVh5WDhxN1pQZFNrCmI3SVZTY1lVVnd6cmU1RUlYbmIzTjJwY2RSeXV4N3BxbkEzZGl6MENnWUVBcjJNek0rbGpmMGpUOG5KR0Y1dzMKR0RUeDRMSEhUb3FWdVg5cnZCNkpJVGQvWS9ZZVoySVZkellsTUFKQjdJVHJ3QWxMZzM3MGRqWkxRVHhCMVh4ZwpTenlJS0E5ZjVhKzlLY0hiTDRiaXhrQkZtTDNRenNsYUE5dVBOMEVyRjdBbnZqL0w2NHFpcEFPREUyWUI0YVFQCklNakJQdmRacU5aa3EzK3FOaGRDaWwwQ2dZQnc4OHdob01KeW9vbjkxZXZnTjRYaXBCZmx5RUVqL2lqdkRsb2kKVXVvaXczRUE0eFdVZ1VaUlNZckJEeTVmZHVWL2FZd0I0RzBER1lBMGhSOE1pTjV6K0dyZk1nWjVMYUNiaDRBegpkNW5sSVQwYjZsVXQ2VlUxOURCR05EdzNFanJYRnQ2alZCK3lmLzFWdnh5R0M1M28wVXVJNmw2MTJQRXcwdkppClFkQ1h3UUtCZ0dnZENpODFWamIxTEdZdTZkOUNzS0k3THdCZjA3eUV3NXlOUHZpd1V3am96MUE5REdmczBmN1MKdEt3SGV4T2xNbW1lQkhOZEV1cEU5OFRNSVoyTXRsTjN6eDU1eUtZNVRkZXdNWUNqNWNuQklrV1NEVEc0b3R0OApxWjdMT0hjY2xkTm5PdFB3WTd3bktRMWlNQTRZR21PTmNsVFgzR0xnajRVK0dUUTgwNWgrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==


---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: custom-metrics-dev
rules:
- apiGroups: [""]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["*"]
  verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: custom-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: custom-metrics-dev
subjects:
- kind: ServiceAccount
  name: custom-metrics-apiserver
  namespace: custom-metrics

---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta1.custom.metrics.k8s.io
spec:
  service:
    name: custom-metrics-apiserver
    namespace: custom-metrics
  group: custom.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100

---
apiVersion: v1
kind: Service
metadata:
  name: custom-metrics-apiserver
  namespace: custom-metrics
spec:
  ports:
  - port: 443
    targetPort: 6443
  selector:
    app: custom-metrics-apiserver

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: custom-metrics-apiserver
  name: custom-metrics-apiserver
  namespace: custom-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: custom-metrics-apiserver
  template:
    metadata:
      labels:
        app: custom-metrics-apiserver
      name: custom-metrics-apiserver
    spec:
      serviceAccountName: custom-metrics-apiserver
      containers:
      - name: custom-metrics-apiserver
        image: directxman12/k8s-prometheus-adapter-amd64
        args:
        - --secure-port=6443
        - --tls-cert-file=/var/run/serving-cert/serving.crt
        - --tls-private-key-file=/var/run/serving-cert/serving.key
        - --logtostderr=true
        - --prometheus-url=http://prometheus.prometheus.svc:9090/
        - --metrics-relist-interval=1m
        - --v=1
        - --config=/etc/adapter/config.yaml
        ports:
        - containerPort: 6443
        volumeMounts:
        - mountPath: /var/run/serving-cert
          name: volume-serving-cert
          readOnly: true
        - mountPath: /etc/adapter/
          name: config
          readOnly: true
        - mountPath: /tmp
          name: tmp-vol
      volumes:
      - name: volume-serving-cert
        secret:
          secretName: cm-adapter-serving-certs
      - name: config
        configMap:
          name: adapter-config
      - name: tmp-vol
        emptyDir: {}
